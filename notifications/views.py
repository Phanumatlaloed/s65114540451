from django.http import JsonResponse
from django.shortcuts import render, get_object_or_404, redirect
from django.contrib.auth.decorators import login_required
from .models import Notification
from django.shortcuts import render
from django.contrib.auth.decorators import login_required
from .models import Notification
from myapp.models import Post, Follow, Cart, CartItem, Order, Review, Product

@login_required
def get_notifications(request):
    # üîπ ‡πÄ‡∏≠‡∏≤‡∏ü‡∏¥‡∏•‡πÄ‡∏ï‡∏≠‡∏£‡πå is_read ‡∏≠‡∏≠‡∏Å‡∏Å‡πà‡∏≠‡∏ô‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
    notifications = Notification.objects.filter(user=request.user).order_by('-created_at')

    print("üîî ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏ö:", notifications.count())  # Debug log

    data = [{
        "sender": n.sender.username,
        "post_id": n.post.id if n.post else None,
        "type": n.notification_type
    } for n in notifications]

    return JsonResponse({"notifications": data})

@login_required
def notifications_list(request):
    notifications = Notification.objects.filter(user=request.user).order_by('-created_at')
    data = {'notifications': []}
    for n in notifications:
        # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        if n.notification_type == 'like':
            message = f"{n.sender.username} liked your post"
        elif n.notification_type == 'comment':
            message = f"{n.sender.username} commented on your post"
        else:
            message = "New notification"
        
        data['notifications'].append({
            'id': n.id,
            'sender': n.sender.username,
            'message': message,
            'post_id': n.post.id if n.post else None
        })
    return render(request, 'notification_list.html', {'notifications': notifications})

@login_required
def toggle_like(request, post_id):
    post = get_object_or_404(Post, id=post_id)
    user = request.user

    if post.likes.filter(id=user.id).exists():
        post.likes.remove(user)
        liked = False
    else:
        post.likes.add(user)
        liked = True

        # ‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏Å‡∏î‡πÑ‡∏•‡∏Ñ‡πå
        create_notification(
            user=post.user,  # ‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå
            sender=user,  # ‚úÖ ‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏Å‡∏î‡πÑ‡∏•‡∏Ñ‡πå
            notification_type="like_post",
            post=post
        )

    return JsonResponse({"success": True, "liked": liked, "like_count": post.likes.count()})


from django.http import JsonResponse
from django.contrib.auth.decorators import login_required
from .models import Notification

@login_required
def get_notifications(request):
    """ ‡∏î‡∏∂‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ """
    notifications = Notification.objects.filter(user=request.user, is_read=False).order_by('-created_at')
    
    data = [
        {
            "id": n.id,
            "sender": n.sender.username if n.sender else "System",
            "type": n.notification_type,
            "post_id": n.post.id if n.post else None,
            "order_id": n.order.id if n.order else None,
            "created_at": n.created_at.strftime("%Y-%m-%d %H:%M:%S"),
        }
        for n in notifications
    ]
    
    return JsonResponse({"notifications": data})

@login_required
def mark_notification_as_read(request, notification_id):
    """ ‡∏ó‡∏≥‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ß‡πà‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß """
    notification = Notification.objects.filter(id=notification_id, user=request.user).first()
    if notification:
        notification.is_read = True
        notification.save()
        return JsonResponse({"success": True})
    return JsonResponse({"success": False, "error": "Notification not found"})

from django.shortcuts import render
from django.contrib.auth.decorators import login_required
from .models import Notification

@login_required
def all_notifications(request):
    """ ‡∏î‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ """
    notifications = Notification.objects.filter(user=request.user).order_by('-created_at')

    return render(request, "notifications.html", {"notifications": notifications})

from django.shortcuts import render
from django.contrib.auth.decorators import login_required
from .models import Notification

@login_required
def seller_notifications_list(request):
    """ ‡∏î‡∏∂‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢ """
    notifications = Notification.objects.filter(
        user=request.user,
        notification_type__in=[
            'new_order', 'new_review', 'refund_request',
            'refund_completed', 'order_shipped', 'refund_approved', 'refund_rejected'
        ]
    ).order_by('-created_at')

    print(f"üì¢ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á {request.user.username}: {notifications.count()} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")  # ‚úÖ Debugging

    return render(request, 'notificationsellers.html', {'notifications': notifications})



